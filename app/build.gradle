plugins {
    id 'com.android.application'
}
def config = rootProject.ext
android {
    compileSdkVersion config.android.compileSdkVersion
    buildToolsVersion config.android.buildToolsVersion

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.?ar"])
    implementation config.supportLibrary.supportAppcompat
    implementation config.supportLibrary.material
    implementation config.supportLibrary.constraintlayout
    testImplementation config.supportLibrary.junit
    androidTestImplementation config.supportLibrary.extjunit
    androidTestImplementation config.supportLibrary.espresso

    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'
    implementation "com.github.permissions-dispatcher:permissionsdispatcher:4.8.0"
    annotationProcessor "com.github.permissions-dispatcher:permissionsdispatcher-processor:4.8.0"
    implementation 'com.blankj:utilcodex:1.30.6'
    implementation "androidx.core:core:1.5.0"
    implementation 'me.rosuh:AndroidFilePicker:0.8.2'

    implementation config.insLibrary.InsCommon
    implementation config.insLibrary.InsWidget
//    implementation config.insLibrary.InsZero
//    implementation config.insLibrary.InsZero2

    implementation config.outSideLibaray.Glide
    annotationProcessor config.outSideLibaray.GlideCompiler
    implementation config.outSideLibaray.GlideIntegration

}